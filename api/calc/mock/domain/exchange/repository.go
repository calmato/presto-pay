// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/exchange/repository.go

// Package mock_exchange is a generated GoMock package.
package mock_exchange

import (
	context "context"
	exchange "github.com/calmato/presto-pay/api/calc/internal/domain/exchange"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockExchangeRepository is a mock of ExchangeRepository interface
type MockExchangeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockExchangeRepositoryMockRecorder
}

// MockExchangeRepositoryMockRecorder is the mock recorder for MockExchangeRepository
type MockExchangeRepositoryMockRecorder struct {
	mock *MockExchangeRepository
}

// NewMockExchangeRepository creates a new mock instance
func NewMockExchangeRepository(ctrl *gomock.Controller) *MockExchangeRepository {
	mock := &MockExchangeRepository{ctrl: ctrl}
	mock.recorder = &MockExchangeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockExchangeRepository) EXPECT() *MockExchangeRepositoryMockRecorder {
	return m.recorder
}

// Index mocks base method
func (m *MockExchangeRepository) Index(ctx context.Context) (*exchange.ExchangeRates, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Index", ctx)
	ret0, _ := ret[0].(*exchange.ExchangeRates)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Index indicates an expected call of Index
func (mr *MockExchangeRepositoryMockRecorder) Index(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Index", reflect.TypeOf((*MockExchangeRepository)(nil).Index), ctx)
}

// Show mocks base method
func (m *MockExchangeRepository) Show(ctx context.Context, currency string) (float64, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Show", ctx, currency)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Show indicates an expected call of Show
func (mr *MockExchangeRepositoryMockRecorder) Show(ctx, currency interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Show", reflect.TypeOf((*MockExchangeRepository)(nil).Show), ctx, currency)
}
