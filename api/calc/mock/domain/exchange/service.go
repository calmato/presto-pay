// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/exchange/service.go

// Package mock_exchange is a generated GoMock package.
package mock_exchange

import (
	context "context"
	exchange "github.com/calmato/presto-pay/api/calc/internal/domain/exchange"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockExchangeService is a mock of ExchangeService interface
type MockExchangeService struct {
	ctrl     *gomock.Controller
	recorder *MockExchangeServiceMockRecorder
}

// MockExchangeServiceMockRecorder is the mock recorder for MockExchangeService
type MockExchangeServiceMockRecorder struct {
	mock *MockExchangeService
}

// NewMockExchangeService creates a new mock instance
func NewMockExchangeService(ctrl *gomock.Controller) *MockExchangeService {
	mock := &MockExchangeService{ctrl: ctrl}
	mock.recorder = &MockExchangeServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockExchangeService) EXPECT() *MockExchangeServiceMockRecorder {
	return m.recorder
}

// Index mocks base method
func (m *MockExchangeService) Index(ctx context.Context) (*exchange.ExchangeRates, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Index", ctx)
	ret0, _ := ret[0].(*exchange.ExchangeRates)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Index indicates an expected call of Index
func (mr *MockExchangeServiceMockRecorder) Index(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Index", reflect.TypeOf((*MockExchangeService)(nil).Index), ctx)
}

// Show mocks base method
func (m *MockExchangeService) Show(ctx context.Context, baseCurrency, currency string) (*exchange.Exchange, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Show", ctx, baseCurrency, currency)
	ret0, _ := ret[0].(*exchange.Exchange)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Show indicates an expected call of Show
func (mr *MockExchangeServiceMockRecorder) Show(ctx, baseCurrency, currency interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Show", reflect.TypeOf((*MockExchangeService)(nil).Show), ctx, baseCurrency, currency)
}
